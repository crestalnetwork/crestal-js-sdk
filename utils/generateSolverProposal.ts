import { DAProposal, PostProposal } from "./types";
import { SiweMessage } from 'siwe';
import pkg from 'uuid'; 
const { v4: uuidv4 } = pkg;


// Function to generate a DAProposal with all necessary parameters
export function generateDAProposal(
  projectID: string,
  chainId: number,
  initCost: number,
  maintenanceCost: number,
  fit: number,
  rank: number,
  acceptCurrencies: string,
  workerAddress: string
): DAProposal {
  return {
    ID: 1, // Static or autogenerated ID
    ProjectID: projectID,
    ChainId: chainId,
    InitCost: initCost,
    MaintenanceCost: maintenanceCost,
    AcceptCurrencies: acceptCurrencies,
    Fit: fit,
    Rank: rank,
    WorkerAddress: workerAddress
  };
}

// Updated function for generating a PostProposal that includes multiple DA proposals
export function generatePostProposal(
  projectID: string,
  requestID: string,
  targetPerformance: number,
  solverAddress: string,
  daProposals: DAProposal[] 
): PostProposal {
  return {
    ProjectID: projectID,
    RequestID: requestID,
    TargetPerformance: targetPerformance,
    SolverAddress: solverAddress,
    DAProposals: daProposals 
  };
}









// Example usage with multiple DA proposals
const projectID = '0xfd4016ce66edd3ca2914a598163627d8c77658492c7e6242fa5ac445f9059178'; // Example project ID
const requestID = "0xaf4c617c909508cab271e2f8cf14dd407144bc4c78dd5aa458391ff6b29e62b2"; // Example request ID
const targetPerformance = 0.95; // Example target performance
const solverAddress = '0x1e22A1C3AB5DfbA41d61d546f39b08A43410caC8'; // Example solver address
const workerAddress = '0xBB900BbE1A20dA4d474666B79a5fa6CE12629733';

// Example of multiple DA proposals
const daProposals: DAProposal[] = [
  generateDAProposal(
    project_id,
    80084, // Polygon Mumbai testnet chain ID
    120,   // Init cost
    100,    // Maintenance cost
    0.9,   // Fit score
    1,     // Rank
    'USDC', // Accepted currency
    workerAddress
  ),
  generateDAProposal(
    projectID,
    80084,
    130,
    20,
    0.92,
    2,
    'USDC',
    workerAddress
  )
];

// Generate the PostProposal with multiple DAProposals
const generatedProposal = generatePostProposal(
  projectID,
  requestID,
  targetPerformance,
  solverAddress,
  daProposals
);

console.log('Generated Proposal with Multiple DAProposals:', generatedProposal);


