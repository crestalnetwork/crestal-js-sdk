/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Worker
 */
export interface Worker {
    /**
     * Worker's blockchain address in hexadecimal format.
     * @type {string}
     * @memberof Worker
     */
    address?: string;
    /**
     * Unique identifier (UUID) of the worker.
     * @type {string}
     * @memberof Worker
     */
    uuid?: string;
    /**
     * Name of the worker.
     * @type {string}
     * @memberof Worker
     */
    name?: string;
    /**
     * Total earnings of the worker.
     * @type {number}
     * @memberof Worker
     */
    totalEarned?: number;
    /**
     * URL of the worker's logo.
     * @type {string}
     * @memberof Worker
     */
    logoUrl?: string;
    /**
     * Total amount staked by the worker.
     * @type {number}
     * @memberof Worker
     */
    totalStaked?: number;
}

/**
 * Check if a given object implements the Worker interface.
 */
export function instanceOfWorker(value: object): value is Worker {
    return true;
}

export function WorkerFromJSON(json: any): Worker {
    return WorkerFromJSONTyped(json, false);
}

export function WorkerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Worker {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'] == null ? undefined : json['address'],
        'uuid': json['uuid'] == null ? undefined : json['uuid'],
        'name': json['name'] == null ? undefined : json['name'],
        'totalEarned': json['total_earned'] == null ? undefined : json['total_earned'],
        'logoUrl': json['logo_url'] == null ? undefined : json['logo_url'],
        'totalStaked': json['total_staked'] == null ? undefined : json['total_staked'],
    };
}

  export function WorkerToJSON(json: any): Worker {
      return WorkerToJSONTyped(json, false);
  }

  export function WorkerToJSONTyped(value?: Worker | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'uuid': value['uuid'],
        'name': value['name'],
        'total_earned': value['totalEarned'],
        'logo_url': value['logoUrl'],
        'total_staked': value['totalStaked'],
    };
}

