/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Referral
 */
export interface Referral {
    /**
     * Unique identifier for the referral.
     * @type {number}
     * @memberof Referral
     */
    id?: number;
    /**
     * Blockchain address of the referrer.
     * @type {string}
     * @memberof Referral
     */
    referrerAddress?: string;
    /**
     * Blockchain address of the referred user.
     * @type {string}
     * @memberof Referral
     */
    referredAddress?: string;
    /**
     * Referral code used by the referred user.
     * @type {string}
     * @memberof Referral
     */
    code?: string;
    /**
     * Action performed as part of the referral.
     * @type {string}
     * @memberof Referral
     */
    activityAction?: string;
    /**
     * Indicates whether the referral was claimed.
     * @type {boolean}
     * @memberof Referral
     */
    claimed?: boolean;
    /**
     * Timestamp when the referral was claimed.
     * @type {string}
     * @memberof Referral
     */
    claimedAt?: string;
    /**
     * Indicates if the referral is currently active.
     * @type {boolean}
     * @memberof Referral
     */
    active?: boolean;
    /**
     * Timestamp when the referral was created.
     * @type {string}
     * @memberof Referral
     */
    createdAt?: string;
}

/**
 * Check if a given object implements the Referral interface.
 */
export function instanceOfReferral(value: object): value is Referral {
    return true;
}

export function ReferralFromJSON(json: any): Referral {
    return ReferralFromJSONTyped(json, false);
}

export function ReferralFromJSONTyped(json: any, ignoreDiscriminator: boolean): Referral {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'referrerAddress': json['referrer_address'] == null ? undefined : json['referrer_address'],
        'referredAddress': json['referred_address'] == null ? undefined : json['referred_address'],
        'code': json['code'] == null ? undefined : json['code'],
        'activityAction': json['activity_action'] == null ? undefined : json['activity_action'],
        'claimed': json['claimed'] == null ? undefined : json['claimed'],
        'claimedAt': json['claimed_at'] == null ? undefined : json['claimed_at'],
        'active': json['active'] == null ? undefined : json['active'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
    };
}

  export function ReferralToJSON(json: any): Referral {
      return ReferralToJSONTyped(json, false);
  }

  export function ReferralToJSONTyped(value?: Referral | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'referrer_address': value['referrerAddress'],
        'referred_address': value['referredAddress'],
        'code': value['code'],
        'activity_action': value['activityAction'],
        'claimed': value['claimed'],
        'claimed_at': value['claimedAt'],
        'active': value['active'],
        'created_at': value['createdAt'],
    };
}

