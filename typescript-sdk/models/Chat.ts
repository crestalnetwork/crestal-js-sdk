/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Chat
 */
export interface Chat {
    /**
     * Unique project identifier.
     * @type {string}
     * @memberof Chat
     */
    projectId?: string;
    /**
     * Chat message exchanged between sender and bot.
     * @type {string}
     * @memberof Chat
     */
    message?: string;
    /**
     * Status of the chat.
     * @type {string}
     * @memberof Chat
     */
    status?: string;
    /**
     * JSON object specifying target performance with units.
     * @type {object}
     * @memberof Chat
     */
    targetPerformance?: object;
    /**
     * Address of the sender in hexadecimal format or "bot".
     * @type {string}
     * @memberof Chat
     */
    sender?: string;
    /**
     * Timestamp of chat creation.
     * @type {string}
     * @memberof Chat
     */
    createdAt?: string;
}

/**
 * Check if a given object implements the Chat interface.
 */
export function instanceOfChat(value: object): value is Chat {
    return true;
}

export function ChatFromJSON(json: any): Chat {
    return ChatFromJSONTyped(json, false);
}

export function ChatFromJSONTyped(json: any, ignoreDiscriminator: boolean): Chat {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['project_id'] == null ? undefined : json['project_id'],
        'message': json['message'] == null ? undefined : json['message'],
        'status': json['status'] == null ? undefined : json['status'],
        'targetPerformance': json['target_performance'] == null ? undefined : json['target_performance'],
        'sender': json['sender'] == null ? undefined : json['sender'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
    };
}

  export function ChatToJSON(json: any): Chat {
      return ChatToJSONTyped(json, false);
  }

  export function ChatToJSONTyped(value?: Chat | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'project_id': value['projectId'],
        'message': value['message'],
        'status': value['status'],
        'target_performance': value['targetPerformance'],
        'sender': value['sender'],
        'created_at': value['createdAt'],
    };
}

