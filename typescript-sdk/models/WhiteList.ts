/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WhiteList
 */
export interface WhiteList {
    /**
     * Blockchain address on the whitelist.
     * @type {string}
     * @memberof WhiteList
     */
    address?: string;
    /**
     * Data Availability (DA) name.
     * @type {string}
     * @memberof WhiteList
     */
    name?: string;
    /**
     * Type of network.
     * @type {string}
     * @memberof WhiteList
     */
    networkType?: WhiteListNetworkTypeEnum;
    /**
     * Timestamp of creation.
     * @type {string}
     * @memberof WhiteList
     */
    createdAt?: string;
}


/**
 * @export
 */
export const WhiteListNetworkTypeEnum = {
    Mainnet: 'Mainnet',
    Testnet: 'Testnet'
} as const;
export type WhiteListNetworkTypeEnum = typeof WhiteListNetworkTypeEnum[keyof typeof WhiteListNetworkTypeEnum];


/**
 * Check if a given object implements the WhiteList interface.
 */
export function instanceOfWhiteList(value: object): value is WhiteList {
    return true;
}

export function WhiteListFromJSON(json: any): WhiteList {
    return WhiteListFromJSONTyped(json, false);
}

export function WhiteListFromJSONTyped(json: any, ignoreDiscriminator: boolean): WhiteList {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'] == null ? undefined : json['address'],
        'name': json['name'] == null ? undefined : json['name'],
        'networkType': json['network_type'] == null ? undefined : json['network_type'],
        'createdAt': json['created_at'] == null ? undefined : json['created_at'],
    };
}

  export function WhiteListToJSON(json: any): WhiteList {
      return WhiteListToJSONTyped(json, false);
  }

  export function WhiteListToJSONTyped(value?: WhiteList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'name': value['name'],
        'network_type': value['networkType'],
        'created_at': value['createdAt'],
    };
}

