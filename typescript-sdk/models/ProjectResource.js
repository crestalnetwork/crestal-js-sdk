/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { SolverFromJSON, SolverToJSON, } from './Solver';
import { WorkerFromJSON, WorkerToJSON, } from './Worker';
/**
 * @export
 */
export const ProjectResourceStatusEnum = {
    Draft: 'draft',
    WaitingProposal: 'waiting_proposal',
    SettingProposal: 'setting_proposal',
    SettingPay: 'setting_pay',
    WaitingDeployment: 'waiting_deployment',
    Deploying: 'deploying',
    Live: 'live',
    Terminated: 'terminated'
};
/**
 * Check if a given object implements the ProjectResource interface.
 */
export function instanceOfProjectResource(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('userAddress' in value) || value['userAddress'] === undefined)
        return false;
    return true;
}
export function ProjectResourceFromJSON(json) {
    return ProjectResourceFromJSONTyped(json, false);
}
export function ProjectResourceFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'proposalRequestId': json['proposal_request_id'] == null ? undefined : json['proposal_request_id'],
        'deploymentRequestId': json['deployment_request_id'] == null ? undefined : json['deployment_request_id'],
        'name': json['name'],
        'userAddress': json['user_address'],
        'targetPerformance': json['target_performance'] == null ? undefined : json['target_performance'],
        'payAmount': json['pay_amount'] == null ? undefined : json['pay_amount'],
        'status': json['status'] == null ? undefined : json['status'],
        'daName': json['da_name'] == null ? undefined : json['da_name'],
        'cost': json['cost'] == null ? undefined : json['cost'],
        'solverUuid': json['solver_uuid'] == null ? undefined : json['solver_uuid'],
        'proposalId': json['proposal_id'] == null ? undefined : json['proposal_id'],
        'workersUuid': json['workers_uuid'] == null ? undefined : json['workers_uuid'],
        'deploymentId': json['deployment_id'] == null ? undefined : json['deployment_id'],
        'pop': json['pop'] == null ? undefined : json['pop'],
        'recommendationParam': json['recommendation_param'] == null ? undefined : json['recommendation_param'],
        'proposedSolver': json['proposed_solver'] == null ? undefined : SolverFromJSON(json['proposed_solver']),
        'deployedWorkers': json['deployed_workers'] == null ? undefined : (json['deployed_workers'].map(WorkerFromJSON)),
    };
}
export function ProjectResourceToJSON(json) {
    return ProjectResourceToJSONTyped(json, false);
}
export function ProjectResourceToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'proposal_request_id': value['proposalRequestId'],
        'deployment_request_id': value['deploymentRequestId'],
        'name': value['name'],
        'user_address': value['userAddress'],
        'target_performance': value['targetPerformance'],
        'pay_amount': value['payAmount'],
        'status': value['status'],
        'da_name': value['daName'],
        'cost': value['cost'],
        'solver_uuid': value['solverUuid'],
        'proposal_id': value['proposalId'],
        'workers_uuid': value['workersUuid'],
        'deployment_id': value['deploymentId'],
        'pop': value['pop'],
        'recommendation_param': value['recommendationParam'],
        'proposed_solver': SolverToJSON(value['proposedSolver']),
        'deployed_workers': value['deployedWorkers'] == null ? undefined : (value['deployedWorkers'].map(WorkerToJSON)),
    };
}
