/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DAProposalFromJSON, DAProposalToJSON, } from './DAProposal';
import { StorageProposalFromJSON, StorageProposalToJSON, } from './StorageProposal';
import { IndexingProposalFromJSON, IndexingProposalToJSON, } from './IndexingProposal';
import { ComputeProposalFromJSON, ComputeProposalToJSON, } from './ComputeProposal';
/**
 * Check if a given object implements the SolversProposal interface.
 */
export function instanceOfSolversProposal(value) {
    return true;
}
export function SolversProposalFromJSON(json) {
    return SolversProposalFromJSONTyped(json, false);
}
export function SolversProposalFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'requestId': json['request_id'] == null ? undefined : json['request_id'],
        'solverAddress': json['solver_address'] == null ? undefined : json['solver_address'],
        'solverReputation': json['solver_reputation'] == null ? undefined : json['solver_reputation'],
        'fit': json['fit'] == null ? undefined : json['fit'],
        'rank': json['rank'] == null ? undefined : json['rank'],
        'da': json['da'] == null ? undefined : DAProposalFromJSON(json['da']),
        'indexing': json['indexing'] == null ? undefined : IndexingProposalFromJSON(json['indexing']),
        'compute': json['compute'] == null ? undefined : ComputeProposalFromJSON(json['compute']),
        'storage': json['storage'] == null ? undefined : StorageProposalFromJSON(json['storage']),
    };
}
export function SolversProposalToJSON(json) {
    return SolversProposalToJSONTyped(json, false);
}
export function SolversProposalToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'request_id': value['requestId'],
        'solver_address': value['solverAddress'],
        'solver_reputation': value['solverReputation'],
        'fit': value['fit'],
        'rank': value['rank'],
        'da': DAProposalToJSON(value['da']),
        'indexing': IndexingProposalToJSON(value['indexing']),
        'compute': ComputeProposalToJSON(value['compute']),
        'storage': StorageProposalToJSON(value['storage']),
    };
}
