/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DAHistoryData } from './DAHistoryData';
import {
    DAHistoryDataFromJSON,
    DAHistoryDataFromJSONTyped,
    DAHistoryDataToJSON,
    DAHistoryDataToJSONTyped,
} from './DAHistoryData';

/**
 * 
 * @export
 * @interface GraphDAInfoResponse
 */
export interface GraphDAInfoResponse {
    /**
     * an array of DA graph history data object
     * @type {Array<DAHistoryData>}
     * @memberof GraphDAInfoResponse
     */
    data?: Array<DAHistoryData>;
    /**
     * network type ex: Mainnet, Testnet
     * @type {string}
     * @memberof GraphDAInfoResponse
     */
    networkType?: string;
}

/**
 * Check if a given object implements the GraphDAInfoResponse interface.
 */
export function instanceOfGraphDAInfoResponse(value: object): value is GraphDAInfoResponse {
    return true;
}

export function GraphDAInfoResponseFromJSON(json: any): GraphDAInfoResponse {
    return GraphDAInfoResponseFromJSONTyped(json, false);
}

export function GraphDAInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphDAInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(DAHistoryDataFromJSON)),
        'networkType': json['network_type'] == null ? undefined : json['network_type'],
    };
}

  export function GraphDAInfoResponseToJSON(json: any): GraphDAInfoResponse {
      return GraphDAInfoResponseToJSONTyped(json, false);
  }

  export function GraphDAInfoResponseToJSONTyped(value?: GraphDAInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(DAHistoryDataToJSON)),
        'network_type': value['networkType'],
    };
}

