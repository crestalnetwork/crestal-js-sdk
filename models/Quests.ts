/* tslint:disable */
/* eslint-disable */
/**
 * Crestal dashboard API - /crestal - OpenAPI 3.0
 * This is a crestal-dashboard-backend server.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Quests
 */
export interface Quests {
    /**
     * Unique identifier for the quest.
     * @type {number}
     * @memberof Quests
     */
    id?: number;
    /**
     * Quest category, such as "builder".
     * @type {string}
     * @memberof Quests
     */
    category?: string;
    /**
     * Difficulty level of the quest.
     * @type {number}
     * @memberof Quests
     */
    level?: number;
    /**
     * Title of the quest.
     * @type {string}
     * @memberof Quests
     */
    title?: string;
    /**
     * Description of the quest activity.
     * @type {string}
     * @memberof Quests
     */
    description?: string;
    /**
     * Total number of "rocks" awarded per quest.
     * @type {number}
     * @memberof Quests
     */
    rocks?: number;
    /**
     * Activity type associated with the quest.
     * @type {string}
     * @memberof Quests
     */
    activityAction?: QuestsActivityActionEnum;
}


/**
 * @export
 */
export const QuestsActivityActionEnum = {
    Login: 'login',
    Interact: 'interact',
    ChatComplete: 'chat.complete',
    ChatHalf: 'chat.half',
    RequestProposal: 'request.proposal',
    DeployProposal: 'deploy.proposal',
    DeploymentUse: 'deployment.use',
    Feedback: 'feedback'
} as const;
export type QuestsActivityActionEnum = typeof QuestsActivityActionEnum[keyof typeof QuestsActivityActionEnum];


/**
 * Check if a given object implements the Quests interface.
 */
export function instanceOfQuests(value: object): value is Quests {
    return true;
}

export function QuestsFromJSON(json: any): Quests {
    return QuestsFromJSONTyped(json, false);
}

export function QuestsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quests {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'category': json['category'] == null ? undefined : json['category'],
        'level': json['level'] == null ? undefined : json['level'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'rocks': json['rocks'] == null ? undefined : json['rocks'],
        'activityAction': json['activity_action'] == null ? undefined : json['activity_action'],
    };
}

  export function QuestsToJSON(json: any): Quests {
      return QuestsToJSONTyped(json, false);
  }

  export function QuestsToJSONTyped(value?: Quests | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': value['category'],
        'level': value['level'],
        'title': value['title'],
        'description': value['description'],
        'rocks': value['rocks'],
        'activity_action': value['activityAction'],
    };
}

